# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  #Disable firewall for make the conection easier
  config.vm.provision "shell",
    inline: "sudo ufw disable"

  #VM used to run the BD
  config.vm.define "bd" do |bd|
    bd.vm.box = "ubuntu/bionic64"
    bd.vm.network "forwarded_port", guest: 5433, host: 5433
    bd.vm.network "forwarded_port", guest: 5432, host: 5432

    # This gives the bd instance a static IP, to ease network communication
    bd.vm.network :private_network, ip: "10.0.0.10"

    bd.vm.provision :shell, path: "provisioning-bd.sh"

  end

  #VM used to run the Spring API
  config.vm.define "spring_api" do |spring_api|
    spring_api.vm.box = "ubuntu/bionic64"
    spring_api.vm.network "forwarded_port", guest: 8080, host: 8080, host_ip: "127.0.0.1"

    # This gives the spring_api instance a static IP, to ease network communication
    spring_api.vm.network :private_network, ip: "10.0.0.20"

    spring_api.vm.provision :shell, path: "provisioning-spring_api.sh"

  end


 

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  #config.vm.network "forwarded_port", guest: 8080, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision "shell", path: 'provisioning.sh' 

end
